#Activating required packages (have to be pre-installed using instal.packages('') function)
library(xts)
library(zoo)
library(dplyr)
library(IDPmisc)

#1transforming data to monthly frequency using last day of month
monthlydata <- aggregate(data, by = list(as.yearmon(data$date), permno = data$permno), FUN = tail, n=1)

#2merge the data with the ME breakpoint file

#Loading ME breakpoints
me_breakpoints <- read.csv('ME_Breakpoints.csv')
                      
#Converting characters into a date in two steps
me_breakpoints$X192512 <- as.character(me_breakpoints$X192512)
me_breakpoints$X192512 <- as.yearmon(me_breakpoints$X192512, format = "%Y%m")
                    
#Cutting relevants dates
relevant_dates <- me_breakpoints[769:1068, c(1,12)]
colnames(relevant_dates) <- c("Date", "breakpoints")
relevant_dates$breakpoints <- relevant_dates[,2] * 1000000

colnames(monthlydata)[1] = "Date"
colnames(relevant_dates)[1] = 'Date'

#Merging ME breakpoints and data2
mergeddata <- merge(monthlydata, relevant_dates, by = "Date")
                      
mergeddata["returns"] <- NA
mergeddata["cumreturns"] <- NA

mergeddata_tbl <- mergeddata %>%
  group_by(permno) %>%
  arrange(permno,Date) %>%
  mutate(return = ((price/lag(price,1))-1))

#Remove redundant columns
data2 = subset(mergeddata_tbl, select = -c(permno.1, returns, cumreturns))

#Finding cumulative returns
data2_tbl <- data2 %>%
  group_by(permno) %>%
  arrange(permno,Date) %>%
  mutate(cumreturn = (price/lag(price,12))-1)

#Remove missing, NA, infinite numbers
data_no_zeros = subset(data2_tbl, price >= 0)
data_no_nas = na.omit(data_no_zeros, cols = price)
cleaned_data=NaRV.omit(data_no_nas)

#Creating top and bottom portfolios, filtered by cap in comparison to me breakpoints
top50portfolio <- subset(cleaned_data, cap>=breakpoints, select = c(1:9) )
bottom50portfolio <- subset(cleaned_data, cap<breakpoints, select = c(1:9) )

#Order portfolios by date and cum return
top50portfolio_tbl <- top50portfolio %>%
  group_by(Date) %>%
   arrange(Date, cumreturn, permno)

bottom50portfolio_tbl <- bottom50portfolio %>%
  group_by(Date) %>%
  arrange(Date, cumreturn, permno)



#Cluster portfolios by month and number of observations within each month
output_top <- tally(group_by(top50portfolio_tbl, Date))
output_bottom <- tally(group_by(bottom50portfolio_tbl, Date))



#Creating nstocks column to determine number of stocks within each decile, computing average
output_top$nstocks <- output_top$n/10
output_top$mean <- mean(output_top$nstocks)

output_bottom$nstocks <- output_bottom$n/10
output_bottom$mean <- mean(output_bottom$nstocks)

#Mean column represents average number of stocks over the observed period
